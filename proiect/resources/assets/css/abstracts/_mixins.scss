// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

/// Event wrapper - DEFAULT MIXIN THAT WAS INCLUDED, CONSIDER REMOVING
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }
}

// Basic font style elements
@mixin basic-font(
  $style: $primary-font-style,
  $weight: $primary-font-weight,
  $size: $primary-font-size,
  $line-height: $primary-line-height) {
  font : {
    style: $style;
    weight: $weight;
    size: $size;
  }
  line-height: $line-height;
}

// Media query
@mixin mq($mq-breakpoint, $mq-breakpoints: $breakpoints) {
  // If $mq-breakpoint is a key that exists in
  // $mq-breakpoints, get and use the value
  @if map-has-key($mq-breakpoints, $mq-breakpoint) {
    $mq-breakpoint: map-get($mq-breakpoints, $mq-breakpoint);
  }

  @media screen and (min-width: #{$mq-breakpoint}) {
    @content;
  }
}

@mixin maxmq($mq-breakpoint, $mq-breakpoints: $breakpoints) {
  // If $mq-breakpoint is a key that exists in
  // $mq-breakpoints, get and use the value
  @if map-has-key($mq-breakpoints, $mq-breakpoint) {
    $mq-breakpoint: map-get($mq-breakpoints, $mq-breakpoint);
    @media (max-width: #{$mq-breakpoint}) {
      @content;
    }
  }
  @else {
    @media screen and (max-width: $mq-breakpoint) {
      @content;
    }
  }
  
}

@mixin betweenmq($min-mq-breakpoint, $max-mq-breakpoint) {

  @media (min-width: $min-mq-breakpoint) and (max-width: $max-mq-breakpoint) {
    @content;
  }
}

// Basic title style
@mixin title( $style: $primary-font-style, $line-height: $primary-line-height) {
  font : {
    style: $style;
    weight: bold;
  }
  line-height: $line-height;
  color: #000;

}

@mixin overlap-left {
  position: absolute;
  bottom:0;
  left:0;
}

@mixin overlap-right {
  position: absolute;
  bottom:0;
  right:0;
}